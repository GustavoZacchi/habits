{"ast":null,"code":"var _jsxFileName = \"/home/gustazacchi/gestao-de-habitos/src/providers/MyGroups/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { createContext, useCallback, useContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyGroupsContext = /*#__PURE__*/createContext([]);\nexport const MyGroupsProvider = ({\n  children\n}) => {\n  _s();\n\n  const [myGroups, setMyGroups] = useState([]);\n  const loadGroups = useCallback(() => {\n    const token = localStorage.getItem(\"@GestãoDeHábitos:access\") || \"\";\n    console.log(JSON.parse(token));\n    axios.get(\"https://kabit-api.herokuapp.com/groups/subscriptions/\", {\n      headers: {\n        Authorization: `Bearer ${JSON.parse(token)}`\n      }\n    }).then(res => {\n      console.log(res);\n      setMyGroups(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  useEffect(() => {\n    const token = localStorage.getItem(\"@GestãoDeHábitos:access\") || \"\";\n\n    if (token) {\n      loadGroups();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MyGroupsContext.Provider, {\n    value: {\n      myGroups,\n      loadGroups\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyGroupsProvider, \"G5hD46uIbiAQRuHJESRK71ip4Pw=\");\n\n_c = MyGroupsProvider;\nexport const useMyGroups = () => {\n  _s2();\n\n  return useContext(MyGroupsContext);\n};\n\n_s2(useMyGroups, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"MyGroupsProvider\");","map":{"version":3,"sources":["/home/gustazacchi/gestao-de-habitos/src/providers/MyGroups/index.js"],"names":["axios","createContext","useCallback","useContext","useEffect","useState","MyGroupsContext","MyGroupsProvider","children","myGroups","setMyGroups","loadGroups","token","localStorage","getItem","console","log","JSON","parse","get","headers","Authorization","then","res","data","catch","err","useMyGroups"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,UAArC,EAAiDC,SAAjD,EAA4DC,QAA5D,QAA4E,OAA5E;;AAEA,OAAO,MAAMC,eAAe,gBAAGL,aAAa,CAAC,EAAD,CAArC;AAEP,OAAO,MAAMM,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAChD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMM,UAAU,GAAGT,WAAW,CAAC,MAAM;AACnC,UAAMU,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,yBAArB,KAAmD,EAAjE;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,KAAL,CAAWN,KAAX,CAAZ;AACAZ,IAAAA,KAAK,CACFmB,GADH,CACO,uDADP,EACgE;AAC5DC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASJ,IAAI,CAACC,KAAL,CAAWN,KAAX,CAAkB;AADpC;AADmD,KADhE,EAMGU,IANH,CAMSC,GAAD,IAAS;AACbR,MAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACAb,MAAAA,WAAW,CAACa,GAAG,CAACC,IAAL,CAAX;AACD,KATH,EAUGC,KAVH,CAUUC,GAAD,IAAS;AACdX,MAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACD,KAZH;AAaD,GAhB6B,EAgB3B,EAhB2B,CAA9B;AAkBAtB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,yBAArB,KAAmD,EAAjE;;AACA,QAAIF,KAAJ,EAAW;AACXD,MAAAA,UAAU;AACT;AACF,GALQ,EAKN,EALM,CAAT;AAOA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEF,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,KAAjC;AAAA,cACGH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAjCM;;GAAMD,gB;;KAAAA,gB;AAmCb,OAAO,MAAMoB,WAAW,GAAG;AAAA;;AAAA,SAAMxB,UAAU,CAACG,eAAD,CAAhB;AAAA,CAApB;;IAAMqB,W","sourcesContent":["import axios from \"axios\";\nimport { createContext, useCallback, useContext, useEffect, useState } from \"react\";\n\nexport const MyGroupsContext = createContext([]);\n\nexport const MyGroupsProvider = ({ children }) => {\n  const [myGroups, setMyGroups] = useState([]);\n\n  const loadGroups = useCallback(() => {\n    const token = localStorage.getItem(\"@GestãoDeHábitos:access\") || \"\";\n    console.log(JSON.parse(token));\n    axios\n      .get(\"https://kabit-api.herokuapp.com/groups/subscriptions/\", {\n        headers: {\n          Authorization: `Bearer ${JSON.parse(token)}`,\n        },\n      })\n      .then((res) => {\n        console.log(res);\n        setMyGroups(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"@GestãoDeHábitos:access\") || \"\";\n    if (token) {\n    loadGroups();\n    }\n  }, []);\n\n  return (\n    <MyGroupsContext.Provider value={{ myGroups, loadGroups }}>\n      {children}\n    </MyGroupsContext.Provider>\n  );\n};\n\nexport const useMyGroups = () => useContext(MyGroupsContext);\n"]},"metadata":{},"sourceType":"module"}